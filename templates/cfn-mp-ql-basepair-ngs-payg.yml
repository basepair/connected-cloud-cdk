Parameters:
  BasepairAccountId:
    Type: String
    Default: "613396392907"
    AllowedValues:
      - "613396392907"
    Description: AWS Account ID from Basepair
  BasepairRoleName:
    Type: String
    Default: Webapp-Prod01-NA-1-Prod
    AllowedValues:
      - Webapp-Prod01-NA-1-Prod
      - Webapp-Prod02-AP-1-Prod
    Description: AWS Role Name from Basepair
Resources:
  BasepairVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: created-by
          Value: cdk
        - Key: env
          Value: prod
        - Key: Name
          Value: BasepairConnectedCloud/BasepairVPC
        - Key: project
          Value: basepair
  BasepairVPCPublicSubnet1Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: created-by
          Value: cdk
        - Key: env
          Value: prod
        - Key: Name
          Value: BasepairConnectedCloud/BasepairVPC/PublicSubnet1
        - Key: project
          Value: basepair
      VpcId:
        Ref: BasepairVPC
  BasepairVPCPublicSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: created-by
          Value: cdk
        - Key: env
          Value: prod
        - Key: Name
          Value: BasepairConnectedCloud/BasepairVPC/PublicSubnet1
        - Key: project
          Value: basepair
      VpcId:
        Ref: BasepairVPC
  BasepairVPCPublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: BasepairVPCPublicSubnet1RouteTable
      SubnetId:
        Ref: BasepairVPCPublicSubnet1Subnet
  BasepairVPCPublicSubnet1DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: BasepairVPCIGWDC83E929
      RouteTableId:
        Ref: BasepairVPCPublicSubnet1RouteTable
    DependsOn:
      - BasepairVPCVPCGWA9F43B64
  BasepairVPCPublicSubnet2Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: created-by
          Value: cdk
        - Key: env
          Value: prod
        - Key: Name
          Value: BasepairConnectedCloud/BasepairVPC/PublicSubnet2
        - Key: project
          Value: basepair
      VpcId:
        Ref: BasepairVPC
  BasepairVPCPublicSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: created-by
          Value: cdk
        - Key: env
          Value: prod
        - Key: Name
          Value: BasepairConnectedCloud/BasepairVPC/PublicSubnet2
        - Key: project
          Value: basepair
      VpcId:
        Ref: BasepairVPC
  BasepairVPCPublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: BasepairVPCPublicSubnet2RouteTable
      SubnetId:
        Ref: BasepairVPCPublicSubnet2Subnet
  BasepairVPCPublicSubnet2DefaultRoute4E1EB459:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: BasepairVPCIGWDC83E929
      RouteTableId:
        Ref: BasepairVPCPublicSubnet2RouteTable
    DependsOn:
      - BasepairVPCVPCGWA9F43B64
  BasepairVPCPublicSubnet3Subnet23D15B57:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: created-by
          Value: cdk
        - Key: env
          Value: prod
        - Key: Name
          Value: BasepairConnectedCloud/BasepairVPC/PublicSubnet3
        - Key: project
          Value: basepair
      VpcId:
        Ref: BasepairVPC
  BasepairVPCPublicSubnet3RouteTable6DE103EA:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: created-by
          Value: cdk
        - Key: env
          Value: prod
        - Key: Name
          Value: BasepairConnectedCloud/BasepairVPC/PublicSubnet3
        - Key: project
          Value: basepair
      VpcId:
        Ref: BasepairVPC
  BasepairVPCPublicSubnet3RouteTableAssociation02F8ECB9:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: BasepairVPCPublicSubnet3RouteTable6DE103EA
      SubnetId:
        Ref: BasepairVPCPublicSubnet3Subnet23D15B57
  BasepairVPCPublicSubnet3DefaultRouteE624408D:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: BasepairVPCIGWDC83E929
      RouteTableId:
        Ref: BasepairVPCPublicSubnet3RouteTable6DE103EA
    DependsOn:
      - BasepairVPCVPCGWA9F43B64
  BasepairVPCIGWDC83E929:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: created-by
          Value: cdk
        - Key: env
          Value: prod
        - Key: Name
          Value: BasepairConnectedCloud/BasepairVPC
        - Key: project
          Value: basepair
  BasepairVPCVPCGWA9F43B64:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: BasepairVPCIGWDC83E929
      VpcId:
        Ref: BasepairVPC
  CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - Fn::Join:
                      - ""
                      - - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group/"
                        - Fn::GetAtt:
                            - BasepairVPC
                            - DefaultSecurityGroup
  BasepairSecurityGroup356FCD73:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Basepair Security Group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: allow SSH access from anywhere
          FromPort: 58746
          IpProtocol: tcp
          ToPort: 58746
      Tags:
        - Key: created-by
          Value: cdk
        - Key: env
          Value: prod
        - Key: project
          Value: basepair
      VpcId:
        Ref: BasepairVPC
  webappbucketA26A0839:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketName: !Sub "${AWS::AccountId}-basepair"
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - HEAD
              - POST
              - PUT
            AllowedOrigins:
              - https://*.basepairtech.com
            ExposedHeaders:
              - ETag
              - Content-Type
              - Content-Length
            MaxAge: 3000
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: created-by
          Value: cdk
        - Key: env
          Value: prod
        - Key: project
          Value: basepair
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  Worker:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: "worker"
  SpotServiceLinkedRole:
    Type: AWS::IAM::ServiceLinkedRole
    Properties:
      AWSServiceName: spot.amazonaws.com
      Description: "Service-linked role required for AWS Spot Instances"
  BasepairTrustedRoleEED6AAC2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:aws:iam::"
                    - Ref: BasepairAccountId
                    - :role/
                    - Ref: BasepairRoleName
        Version: "2012-10-17"
      Description: Basepair Trusted Role
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:DescribeLogStreams
                Effect: Allow
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*"
                Sid: AllowCWLogs
              - Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*"
                Sid: AllowCWLogsStream
              - Action: cloudwatch:GetMetricStatistics
                Effect: Allow
                Resource: "*"
                Sid: AllowCW
            Version: "2012-10-17"
          PolicyName: partner.basepair.cw
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:CreateTags
                  - ec2:RunInstances
                  - ec2:StartInstances
                  - ec2:StopInstances
                  - ec2:TerminateInstances
                Effect: Allow
                Resource:
                  - arn:aws:ec2:*:*:capacity-reservation/*
                  - arn:aws:ec2:*:*:client-vpn-endpoint/*
                  - arn:aws:ec2:*:*:dedicated-host/*
                  - arn:aws:ec2:*:*:dhcp-options/*
                  - arn:aws:ec2:*:*:elastic-gpu/*
                  - arn:aws:ec2:*:*:instance/*
                  - arn:aws:ec2:*:*:internet-gateway/*
                  - arn:aws:ec2:*:*:key-pair/*
                  - arn:aws:ec2:*:*:launch-template/*
                  - arn:aws:ec2:*:*:local-gateway-route-table-virtual-interface-group-association/*
                  - arn:aws:ec2:*:*:local-gateway-route-table-vpc-association/*
                  - arn:aws:ec2:*:*:local-gateway-route-table/*
                  - arn:aws:ec2:*:*:local-gateway-virtual-interface-group/*
                  - arn:aws:ec2:*:*:local-gateway-virtual-interface/*
                  - arn:aws:ec2:*:*:local-gateway/*
                  - arn:aws:ec2:*:*:network-acl/*
                  - arn:aws:ec2:*:*:network-interface/*
                  - arn:aws:ec2:*:*:placement-group/*
                  - arn:aws:ec2:*:*:reserved-instances/*
                  - arn:aws:ec2:*:*:route-table/*
                  - arn:aws:ec2:*:*:security-group/*
                  - arn:aws:ec2:*:*:spot-instances-request/*
                  - arn:aws:ec2:*:*:subnet/*
                  - arn:aws:ec2:*:*:traffic-mirror-filter/*
                  - arn:aws:ec2:*:*:traffic-mirror-session/*
                  - arn:aws:ec2:*:*:traffic-mirror-target/*
                  - arn:aws:ec2:*:*:transit-gateway-attachment/*
                  - arn:aws:ec2:*:*:transit-gateway-multicast-domain/*
                  - arn:aws:ec2:*:*:transit-gateway-route-table/*
                  - arn:aws:ec2:*:*:transit-gateway/*
                  - arn:aws:ec2:*:*:volume/*
                  - arn:aws:ec2:*:*:vpc-endpoint-service/*
                  - arn:aws:ec2:*:*:vpc-endpoint/*
                  - arn:aws:ec2:*:*:vpc-flow-log/*
                  - arn:aws:ec2:*:*:vpc/*
                  - arn:aws:ec2:*:*:vpn-connection/*
                  - arn:aws:ec2:*:*:vpn-gateway/*
                  - arn:aws:ec2:*::fpga-image/*
                  - arn:aws:ec2:*::image/*
                  - arn:aws:ec2:*::snapshot/*
                  - arn:aws:elastic-inference:*:*:elastic-inference-accelerator/*
              - Action:
                  - ec2:CancelSpotInstanceRequests
                  - ec2:DescribeInstanceStatus
                  - ec2:DescribeInstanceTypes
                  - ec2:DescribeInstances
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSpotInstanceRequests
                  - ec2:DescribeSpotPriceHistory
                  - ec2:DescribeTags
                  - ec2:RequestSpotInstances
                  - ec2:RunScheduledInstances
                  - ec2:DescribeSubnets
                  - ec2:DescribeImages
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"
          PolicyName: partner.basepair.ec2
        - PolicyDocument:
            Statement:
              - Action: iam:PassRole
                Effect: Allow
                Resource:
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/partner.basepair.worker"
                Sid: IAMSetRoleToWorkers
            Version: "2012-10-17"
          PolicyName: partner.basepair.iam
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:AbortMultipartUpload
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:GetObjectTagging
                  - s3:ListBucket
                  - s3:ListMultipartUploadParts
                  - s3:PutObject
                  - s3:PutObjectTagging
                Effect: Allow
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:aws:s3:::"
                        - Ref: webappbucketA26A0839
                        - /*
                  - Fn::Join:
                      - ""
                      - - "arn:aws:s3:::"
                        - Ref: webappbucketA26A0839
                Sid: AllowS3
            Version: "2012-10-17"
          PolicyName: partner.basepair.s3
      RoleName: partner.basepair.trusted
      Tags:
        - Key: created-by
          Value: cdk
        - Key: env
          Value: prod
        - Key: project
          Value: basepair
  BasepairWorkerRole8118E21C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Description: Basepair Worker Role
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - ecr:BatchCheckLayerAvailability
                  - ecr:BatchGetImage
                  - ecr:DescribeImageScanFindings
                  - ecr:DescribeImages
                  - ecr:DescribeRepositories
                  - ecr:GetDownloadUrlForLayer
                  - ecr:GetLifecyclePolicy
                  - ecr:GetLifecyclePolicyPreview
                  - ecr:GetRepositoryPolicy
                  - ecr:ListImages
                  - ecr:ListTagsForResource
                Condition:
                  StringEquals:
                    aws:ResourceTag/Type: Bio
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:aws:ecr:*:"
                      - Ref: BasepairAccountId
                      - :repository/bio-*
                Sid: AllowECRPullBioImage
            Version: "2012-10-17"
          PolicyName: basepair.ecr
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:AbortMultipartUpload
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:GetObjectTagging
                  - s3:ListBucket
                  - s3:ListMultipartUploadParts
                  - s3:PutObject
                  - s3:PutObjectTagging
                Effect: Allow
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:aws:s3:::"
                        - Ref: webappbucketA26A0839
                        - /*
                  - Fn::Join:
                      - ""
                      - - "arn:aws:s3:::"
                        - Ref: webappbucketA26A0839
                Sid: AllowS3
            Version: "2012-10-17"
          PolicyName: partner.basepair.s3
      RoleName: partner.basepair.worker
      Tags:
        - Key: created-by
          Value: cdk
        - Key: env
          Value: prod
        - Key: project
          Value: basepair
  InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      InstanceProfileName: "partner.basepair.worker"
      Roles:
        - !Ref BasepairWorkerRole8118E21C
Outputs:
  Subnet1Output:
    Value:
      Ref: BasepairVPCPublicSubnet1Subnet
    Export:
      Name: Subnet1
  Subnet2Output:
    Value:
      Ref: BasepairVPCPublicSubnet2Subnet
    Export:
      Name: Subnet2
  Subnet3Output:
    Value:
      Ref: BasepairVPCPublicSubnet3Subnet23D15B57
    Export:
      Name: Subnet3
  SecurityGroupOutput:
    Value:
      Fn::GetAtt:
        - BasepairSecurityGroup356FCD73
        - GroupId
    Export:
      Name: SecurityGroup
  TrustedRoleOutput:
    Value:
      Fn::GetAtt:
        - BasepairTrustedRoleEED6AAC2
        - Arn
    Export:
      Name: TrustedRoleARN
  WorkerRoleOutput:
    Value:
      Fn::GetAtt:
        - BasepairWorkerRole8118E21C
        - Arn
    Export:
      Name: WorkerRoleARN
  BucketOutput:
    Value:
      Ref: webappbucketA26A0839
    Export:
      Name: BucketName
